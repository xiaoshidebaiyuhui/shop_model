1.切换并创建分支 ： git checkout -b dev
2.查看当前分支：git branch
3.查看当前文件内容 : cat one.js
4.添加文件到缓存区： git add one.js
5.往当前分支上添加内容： git commit -m '向当前分支上添加了one.js文件'
6.切换回master分支: git checkout master
7.在主分支(master)上合并dev分支上的内容：git merge dev
8.在合并完分支后删除dev分支： git branch -d dev
9.查看分支命令： git branch
10. 通常合并分支时，git一般使用”Fast forward”模式，在这种模式下，删除分支后，
	会丢掉分支信息，我们使用带参数 –no-ff来禁用”Fast forward”模式。
	git merge --no-ff -m '你的注释' dev
11.查看远程库的信息:  git remote
12.查看远程库的详细信息: git remote –v
13.推送分支就是把该分支上所有本地提交到远程库中: git push origin master
14.删除远程的git分支： git push origin --delete ‘你要删除的远程分支名称’
15.查看本地和远程的所有分支：git branch -a
16.版本回退： git reset –hard HEAD^
17.获取到了每次修改的版本号： git log –pretty=oneline
18.推送所有分支到远程仓库： git push [remote] --all
19.远程仓库和本地仓库进行关联： git remote add origin ‘你的git地址’
20.拉取远程库的代码并合并：  git pull --rebase origin master
21.由于新建的远程仓库是空的，
   所以要加上-u这个参数（推送本地到远程）： git push -u origin master
22.将远程的dev分支到本地文件夹里:git checkout –b dev origin/dev
23.指定本地dev分支与远程origin/dev分支的链接，
   再拉取分支上的代码： git branch --set-upstream-to=origin/dev
24.将最新提交的代码从远程分支上抓下来(当前分支)： git pull
25.修改远程仓库地址： git remote set-url origin ‘URL’
26.想删掉它又担心以后需要查看它的代码，想保存它但又不想增加一个脏的提交（git储藏）：git stash  